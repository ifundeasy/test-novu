name: novu
services:
  api:
    tty: true
    image: 'ghcr.io/novuhq/novu/api:2.0.0'
    restart: unless-stopped
    logging:
      driver: 'json-file'
      options:
        max-size: '50m'
        max-file: '5'
    environment:
      NODE_ENV: production
      API_ROOT_URL: http://localhost:3000
      DISABLE_USER_REGISTRATION: false
      # DISABLE_USER_REGISTRATION: true # Redeploy for disable registration
      PORT: 3000
      FRONT_BASE_URL: http://localhost:4200
      MONGO_URL: mongodb://default:mypswd123@host.docker.internal:27017/novu-db?authSource=admin
      MONGO_MIN_POOL_SIZE: 75
      MONGO_MAX_POOL_SIZE: 200
      REDIS_HOST: host.docker.internal
      REDIS_PORT: 6379
      REDIS_PASSWORD: mypswd123
      REDIS_DB_INDEX: 2
      REDIS_CACHE_SERVICE_HOST:
      REDIS_CACHE_SERVICE_PORT: 6379
      S3_LOCAL_STACK: http://host.docker.internal:4566
      S3_BUCKET_NAME: novu-local
      S3_REGION: us-east-1
      AWS_ACCESS_KEY_ID: default
      AWS_SECRET_ACCESS_KEY: mypswd123
      JWT_SECRET: JWT_SECRET_123
      STORE_ENCRYPTION_KEY: <ENCRYPTION_KEY_MUST_BE_32_LONG>
      # SENTRY_DSN: ''
      # NEW_RELIC_APP_NAME: ''
      # NEW_RELIC_LICENSE_KEY: ''
      API_CONTEXT_PATH: ''
    ports:
      - '3000:3000'

  worker:
    tty: true
    image: 'ghcr.io/novuhq/novu/worker:2.0.0'
    restart: unless-stopped
    logging:
      driver: 'json-file'
      options:
        max-size: '50m'
        max-file: '5'
    environment:
      NODE_ENV: production
      API_ROOT_URL: http://localhost:3000
      MONGO_URL: mongodb://default:mypswd123@host.docker.internal:27017/novu-db?authSource=admin
      MONGO_MAX_POOL_SIZE: 200
      REDIS_HOST: host.docker.internal
      REDIS_PORT: 6379
      REDIS_PASSWORD: 'mypswd123'
      REDIS_DB_INDEX: 2
      REDIS_CACHE_SERVICE_HOST: ''
      REDIS_CACHE_SERVICE_PORT: 6379
      S3_LOCAL_STACK: http://host.docker.internal:4566
      S3_BUCKET_NAME: novu-local
      S3_REGION: us-east-1
      AWS_ACCESS_KEY_ID: default
      AWS_SECRET_ACCESS_KEY: mypswd123
      STORE_ENCRYPTION_KEY: <ENCRYPTION_KEY_MUST_BE_32_LONG>
      # SENTRY_DSN: ''
      # NEW_RELIC_APP_NAME: ''
      # NEW_RELIC_LICENSE_KEY: ''
      BROADCAST_QUEUE_CHUNK_SIZE: 100
      MULTICAST_QUEUE_CHUNK_SIZE: 100

  ws:
    tty: true
    image: 'ghcr.io/novuhq/novu/ws:2.0.0'
    restart: unless-stopped
    logging:
      driver: 'json-file'
      options:
        max-size: '50m'
        max-file: '5'
    environment:
      PORT: 3002
      NODE_ENV: production
      MONGO_URL: mongodb://default:mypswd123@host.docker.internal:27017/novu-db?authSource=admin
      MONGO_MAX_POOL_SIZE: 200
      REDIS_HOST: host.docker.internal
      REDIS_PORT: 6379
      REDIS_PASSWORD: 'mypswd123'
      JWT_SECRET: JWT_SECRET_123
      WS_CONTEXT_PATH: ''
      # NEW_RELIC_APP_NAME: ''
      # NEW_RELIC_LICENSE_KEY: ''
    ports:
      - '3002:3002'

  web:
    tty: true
    image: 'ghcr.io/novuhq/novu/web:2.0.0'
    depends_on:
      - api
      - worker
    restart: unless-stopped
    logging:
      driver: 'json-file'
      options:
        max-size: '50m'
        max-file: '5'
    environment:
      REACT_APP_API_URL: http://localhost:3000
      REACT_APP_ENVIRONMENT: production
      REACT_APP_WIDGET_EMBED_PATH: http://localhost:4701/embed.umd.min.js
      REACT_APP_IS_SELF_HOSTED: 'true'
      REACT_APP_WS_URL: http://localhost:3002
    ports:
      - 4200:4200
    command: ['/bin/sh', '-c', 'pnpm run envsetup:docker && pnpm run start:static:build']
    healthcheck:
      test: ['CMD-SHELL', 'curl --silent --fail http://localhost:4200 || exit 1']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
